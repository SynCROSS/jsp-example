/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2020-11-27 06:15:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;
import java.sql.*;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/common/nav.jsp", Long.valueOf(1606446713037L));
    _jspx_dependants.put("/routes/salesRegistration.jsp", Long.valueOf(1606452569578L));
    _jspx_dependants.put("/routes/salesStatusByCategory.jsp", Long.valueOf(1606457136253L));
    _jspx_dependants.put("/common/header.jsp", Long.valueOf(1606443839921L));
    _jspx_dependants.put("/common/footer.jsp", Long.valueOf(1606445335916L));
    _jspx_dependants.put("/routes/salesStatusByProduct.jsp", Long.valueOf(1606457105524L));
    _jspx_dependants.put("/routes/viewConsolidatedSalesHistory.jsp", Long.valueOf(1606456194645L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>jsp example</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"public/index.css\" />\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("  \t");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("  <h1>쇼핑몰 관리 프로그램</h1>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("  \t");
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("  <ul>\r\n");
      out.write("    <li><a href=\"index.jsp?routes=salesRegistration\">판매 등록</a></li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"index.jsp?routes=viewConsolidatedSalesHistory\"\r\n");
      out.write("        >통합 매출 내역 조회</a\r\n");
      out.write("      >\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"index.jsp?routes=salesStatusByProduct\">상품별 매출현황</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"index.jsp?routes=salesStatusByCategory\"\r\n");
      out.write("        >카테고리별 매출현황 조회</a\r\n");
      out.write("      >\r\n");
      out.write("    </li>\r\n");
      out.write("    <li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("  </ul>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("  \t<section>\r\n");
      out.write("  \t");

  	String routes = request.getParameter("routes") != null ? request.getParameter("routes") : "";
  	switch(routes){
  	case "salesRegistration":
  	
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>판매 등록</h2>\r\n");
      out.write("<form action=\"action/saleInsert.jsp\">\r\n");
      out.write("\t\t");

			try {
			Class.forName("oracle.jdbc.OracleDriver");
			Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//122.128.169.32:1521/xe", "smc_user_4", "1234");
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("  <table border=\"1\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>판매한 상품</td>\r\n");
      out.write("      <td>\r\n");
      out.write("        <select name=\"product_id\" id=\"product_id\">\r\n");
      out.write("        ");

			Statement stmt = conn.createStatement();
			String query = " SELECT " + 
			" sale_id, product.name " + 
			" FROM " + 
			" sale, product "+
			" WHERE "+
			" product.product_id = sale.product_id ";
			/* System.out.println(query); */
			ResultSet rs = stmt.executeQuery(query);
			
			while (rs.next()) {
        
      out.write("\r\n");
      out.write("          <option value=\"");
      out.print(rs.getInt(1));
      out.write('"');
      out.write('>');
      out.print(rs.getString(2));
      out.write("</option>\r\n");
      out.write("          ");
} 
      out.write("\r\n");
      out.write("        </select>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>수량</td>\r\n");
      out.write("      <td><input type=\"number\" name=\"amount\"/></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td>판매 날짜</td>\r\n");
      out.write("      <td><input type=\"text\" name=\"purchase_date\" placeholder=\"yyyyMMdd\"/></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td><input type=\"submit\" value=\"제출\" onclick=\"form_submit()\"/></td>\r\n");
      out.write("      <td><input type=\"button\" value=\"다시쓰기\" onclick=\"form_reset_value()\"/></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write("  \t\t");

			stmt.close();
			conn.commit();
			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("const form_submit = () => {\r\n");
      out.write("\t  alert('submit!');\r\n");
      out.write("\t  document.student_insert.submit();\r\n");
      out.write("\t};\r\n");
      out.write("const form_reset_value = () => {\r\n");
      out.write("\t  alert('reset!');\r\n");
      out.write("\t  document.student_insert.reset();\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("</script>");

  		break;
  	case "viewConsolidatedSalesHistory":
  	
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>통합 매출 내역 조회</h2>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>판매 ID</td>\r\n");
      out.write("\t\t<td>상품명</td>\r\n");
      out.write("\t\t<td>구매 일자</td>\r\n");
      out.write("\t\t<td>총 구매 금액</td>\r\n");
      out.write("\t\t<td>구매 개수</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		try {
		Class.forName("oracle.jdbc.OracleDriver");
		Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//122.128.169.32:1521/xe", "smc_user_4", "1234");

		Statement stmt = conn.createStatement();
		String query = " SELECT " + " sale.product_id, product.name, purchase_date, sale_price, amount"
		+ " FROM " + " sale, product " + " WHERE " + " product.product_id = sale.product_id";
		// System.out.println(query);
		ResultSet rs = stmt.executeQuery(query);
		while (rs.next()) {
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("product_id"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getString("name"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getString("purchase_date"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("sale_price"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("amount"));
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		}

	stmt.close();
	conn.commit();
	conn.close();
	} catch (Exception e) {
	e.printStackTrace();
	}
	
      out.write("\r\n");
      out.write("</table>");

  		break;
  	case "salesStatusByProduct":
  	
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>상품별 매출현황</h2>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>상품명</td>\r\n");
      out.write("\t\t<td>총 판매 금액</td>\r\n");
      out.write("\t\t<td>판매 개수</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		try {
		Class.forName("oracle.jdbc.OracleDriver");
		Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//122.128.169.32:1521/xe", "smc_user_4", "1234");

		Statement stmt = conn.createStatement();
		String query = " SELECT " + " product.name, SUM(sale_price) AS total_price, SUM(amount) AS total_amount " + " FROM "
		+ " sale, product " + " WHERE " + " product.product_id = sale.product_id " + " GROUP BY "
		+ " product.name ";
		// System.out.println(query);
		ResultSet rs = stmt.executeQuery(query);
		while (rs.next()) {
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getString("name"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("total_price"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("total_amount"));
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		}

	stmt.close();
	conn.commit();
	conn.close();
	} catch (Exception e) {
	e.printStackTrace();
	}
	
      out.write("\r\n");
      out.write("</table>");

  		break;
  	case "salesStatusByCategory":
  	
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>카테고리별 매출현황 조회</h2>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>카테고리명</td>\r\n");
      out.write("\t\t<td>총 판매 금액</td>\r\n");
      out.write("\t\t<td>판매 개수</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		try {
		Class.forName("oracle.jdbc.OracleDriver");
		Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@//122.128.169.32:1521/xe", "smc_user_4", "1234");

		Statement stmt = conn.createStatement();
		String query = " SELECT " + " category.name, " + " SUM(sale_price) AS total_price, "
		+ " SUM(amount) AS total_amount " + " FROM " + " sale, " + " category, " + " product " + " WHERE "
		+ " category.category_id = product.category_id " + " AND product.product_id = sale.product_id "
		+ " GROUP BY " + " category.name " + " ORDER BY " + " total_price DESC ";
		;
		// System.out.println(query);
		ResultSet rs = stmt.executeQuery(query);
		while (rs.next()) {
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getString("name"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("total_price"));
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(rs.getInt("total_amount"));
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

		}

	stmt.close();
	conn.commit();
	conn.close();
	} catch (Exception e) {
	e.printStackTrace();
	}
	
      out.write("\r\n");
      out.write("</table>");

  		break;
  	default:
  	
      out.write("\r\n");
      out.write("  \t<div style=\"text-align: left;\">\r\n");
      out.write("  \t<h3>쇼핑몰 관리 프로그램</h3>\r\n");
      out.write("  \t<br/>\r\n");
      out.write("  \t<pre>\r\n");
      out.write("쇼핑몰을 관리하기 위한 프로그램이다\r\n");
      out.write("  \t\r\n");
      out.write("1.상품테이블, 카테고리 테이블, 매출정보 테이블을 생성한다.\r\n");
      out.write("2.판매 등록, 통합 매출 내역 조회, 상품별 매출현황, 카테고리별 매출현황 조회 페이지를 작성한다. \r\n");
      out.write("3.올바르게 구현되었는지 확인한다.  \t\r\n");
      out.write("  \t</pre>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t");

  		break;
  	}
  	
      out.write("\r\n");
      out.write("  \t</section>\r\n");
      out.write("  \t");
      out.write("\r\n");
      out.write("<footer>Copyright &copy; <span></span> All right reserved SMC</footer>\r\n");
      out.write("<script>\r\n");
      out.write("  document.querySelector('span').innerText = new Date().getFullYear();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
